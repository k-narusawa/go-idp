/* tslint:disable */
/* eslint-disable */
/**
 * Go-IdP
 * Go-IdP
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError, operationServerMap } from './base';

/**
 * 
 * @export
 * @interface WebAuthnStartResponse
 */
export interface WebAuthnStartResponse {
    /**
     * 
     * @type {WebAuthnStartResponseRp}
     * @memberof WebAuthnStartResponse
     */
    'rp': WebAuthnStartResponseRp;
    /**
     * 
     * @type {WebAuthnStartResponseUser}
     * @memberof WebAuthnStartResponse
     */
    'user': WebAuthnStartResponseUser;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponse
     */
    'challenge': string;
    /**
     * 
     * @type {Array<WebAuthnStartResponsePubKeyCredParamsInner>}
     * @memberof WebAuthnStartResponse
     */
    'pubKeyCredParams': Array<WebAuthnStartResponsePubKeyCredParamsInner>;
    /**
     * 
     * @type {number}
     * @memberof WebAuthnStartResponse
     */
    'timeout': number;
    /**
     * 
     * @type {Array<WebAuthnStartResponseExcludeCredentialsInner>}
     * @memberof WebAuthnStartResponse
     */
    'excludeCredentials': Array<WebAuthnStartResponseExcludeCredentialsInner>;
    /**
     * 
     * @type {WebAuthnStartResponseAuthenticatorSelection}
     * @memberof WebAuthnStartResponse
     */
    'authenticatorSelection': WebAuthnStartResponseAuthenticatorSelection;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponse
     */
    'attestation': string;
    /**
     * 
     * @type {WebAuthnStartResponseExtensions}
     * @memberof WebAuthnStartResponse
     */
    'extensions'?: WebAuthnStartResponseExtensions;
}
/**
 * 
 * @export
 * @interface WebAuthnStartResponseAuthenticatorSelection
 */
export interface WebAuthnStartResponseAuthenticatorSelection {
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseAuthenticatorSelection
     */
    'authenticatorAttachment'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebAuthnStartResponseAuthenticatorSelection
     */
    'requireResidentKey'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseAuthenticatorSelection
     */
    'userVerification'?: string;
}
/**
 * 
 * @export
 * @interface WebAuthnStartResponseExcludeCredentialsInner
 */
export interface WebAuthnStartResponseExcludeCredentialsInner {
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseExcludeCredentialsInner
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseExcludeCredentialsInner
     */
    'type'?: string;
}
/**
 * 
 * @export
 * @interface WebAuthnStartResponseExtensions
 */
export interface WebAuthnStartResponseExtensions {
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseExtensions
     */
    'appid'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseExtensions
     */
    'authnSel'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WebAuthnStartResponseExtensions
     */
    'exts'?: boolean;
}
/**
 * 
 * @export
 * @interface WebAuthnStartResponsePubKeyCredParamsInner
 */
export interface WebAuthnStartResponsePubKeyCredParamsInner {
    /**
     * 
     * @type {number}
     * @memberof WebAuthnStartResponsePubKeyCredParamsInner
     */
    'alg'?: number;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponsePubKeyCredParamsInner
     */
    'type'?: string;
}
/**
 * 
 * @export
 * @interface WebAuthnStartResponseRp
 */
export interface WebAuthnStartResponseRp {
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseRp
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseRp
     */
    'name'?: string;
}
/**
 * 
 * @export
 * @interface WebAuthnStartResponseUser
 */
export interface WebAuthnStartResponseUser {
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseUser
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseUser
     */
    'name'?: string;
    /**
     * 
     * @type {string}
     * @memberof WebAuthnStartResponseUser
     */
    'displayName'?: string;
}

/**
 * WebauthnApi - axios parameter creator
 * @export
 */
export const WebauthnApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * WebAuthn 登録開始
         * @summary 登録開始
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        webauthnStart: async (options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/api/v1/webauthn/start`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication Bearer required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * WebauthnApi - functional programming interface
 * @export
 */
export const WebauthnApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = WebauthnApiAxiosParamCreator(configuration)
    return {
        /**
         * WebAuthn 登録開始
         * @summary 登録開始
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async webauthnStart(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WebAuthnStartResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.webauthnStart(options);
            const index = configuration?.serverIndex ?? 0;
            const operationBasePath = operationServerMap['WebauthnApi.webauthnStart']?.[index]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, operationBasePath || basePath);
        },
    }
};

/**
 * WebauthnApi - factory interface
 * @export
 */
export const WebauthnApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = WebauthnApiFp(configuration)
    return {
        /**
         * WebAuthn 登録開始
         * @summary 登録開始
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        webauthnStart(options?: any): AxiosPromise<WebAuthnStartResponse> {
            return localVarFp.webauthnStart(options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * WebauthnApi - object-oriented interface
 * @export
 * @class WebauthnApi
 * @extends {BaseAPI}
 */
export class WebauthnApi extends BaseAPI {
    /**
     * WebAuthn 登録開始
     * @summary 登録開始
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WebauthnApi
     */
    public webauthnStart(options?: RawAxiosRequestConfig) {
        return WebauthnApiFp(this.configuration).webauthnStart(options).then((request) => request(this.axios, this.basePath));
    }
}



